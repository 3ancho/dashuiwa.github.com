<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: os | Decx = 1210]]></title>
  <link href="http://ruoranwang.github.com/blog/categories/os/atom.xml" rel="self"/>
  <link href="http://ruoranwang.github.com/"/>
  <updated>2013-05-17T00:15:34-04:00</updated>
  <id>http://ruoranwang.github.com/</id>
  <author>
    <name><![CDATA[Ruoran Wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install Python virtualenvwrapper on OS X Mountain Lion]]></title>
    <link href="http://ruoranwang.github.com/blog/2013/01/11/install-python-virtualenvwrapper-on-os-x-mountain-lion/"/>
    <updated>2013-01-11T00:24:00-05:00</updated>
    <id>http://ruoranwang.github.com/blog/2013/01/11/install-python-virtualenvwrapper-on-os-x-mountain-lion</id>
    <content type="html"><![CDATA[<p>This seems trivial right? pip install?
Well, that's not the case if you want virtualenv or virtualenvwrapper working properly.</p>

<p>You could, using pip, to install those packages. But you will notice even provided <code>--no-site-packages</code>, you will still able to import from system site-packages. (If you really did so, you will have them in <code>/Library/Python/2.7/site-packages/</code>). In my case, installing in virtualenv will end up placing packages into system site-packages path. Oh my zsh.</p>

<p>For many reasons you need to install python from homebrew or somewhere else.</p>

<h3>Mountain Lion Python (2.7.2)</h3>

<p>Mountain Lion Default python:</p>

<pre><code>which python 
/usr/bin/python 
</code></pre>

<p>Mountain Lion Defaut python Framework/Package/Library Path:</p>

<pre><code>/System/Library/Frameworks/Python.framework/Versions/2.7/
/Library/Python/2.7/site-packages/
</code></pre>

<p>Note: Mountain lion python will cause trouble when using virtualenv/virtualenvwrapper.</p>

<h3>Brew installed python (2.7.3)</h3>

<p>Simply:</p>

<pre><code>brew install python
</code></pre>

<p>I got:</p>

<pre><code>which python
/usr/local/bin/python
</code></pre>

<p>Then you got pip distribute ready.
Have fun with pip install.
My site-packages path is:</p>

<pre><code>/usr/local/lib/python2.7/site-packages/
</code></pre>

<h3>virtualenvwrapper</h3>

<pre><code>pip install virtualenvwrapper

export WORKON_HOME=~/Envs
mkdir -p $WORKON_HOME
source /usr/local/share/python/virtualenvwrapper.sh
# change above path accordingly 
mkvirtualenv env1
</code></pre>

<p>.zshrc or .bashrc add following:</p>

<pre><code>PATH=/usr/local/share/python/:$PATH
export WORKON_HOME=$HOME/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
</code></pre>

<p>There are couple of paths you might need to add, such as <code>/usr/local/share/python/</code>.(This contains some python scripts. e.g yolk, virtualenvwrapper.sh, etc)</p>

<h4>List Installed packages</h4>

<pre><code>lssitepackages   
rmvirtualenv
cpvirtualenv
</code></pre>

<h4>Switch to a env</h4>

<pre><code>workon env1
deactivate
</code></pre>

<h3>With zsh</h3>

<p>In <code>$WORKON_HOME/postactivate</code> add:</p>

<p><code>
PS1="$_OLD_VIRTUAL_PS1"
_OLD_RPROMPT="$RPROMPT"
RPROMPT="%{${fg_bold[white]}%}(env: %{${fg[green]}%}`basename \"$VIRTUAL_ENV\"`%{${fg_bold[white]}%})%{${reset_color}%} $RPROMPT"
</code>
In <code>$WORKON_HOME/postdeactivate</code> add:</p>

<p><code>
RPROMPT="$_OLD_RPROMPT"
</code></p>
]]></content>
  </entry>
  
</feed>
